.time-line-container>div:last-child .education__time>.education__line {
    display: none;
}

/* Stacking Cards animation */
/* .spacer {
    height: calc(100vh - var(--card-height) - var(--card-margin));
} */

/* div {
    height: var(--card-height);
}

li:nth-child(1) div {
    background-color: pink;
}

li:nth-child(2) div {
    background-color: yellow;
}

li:nth-child(3) div {
    background-color: blue;
}

li:nth-child(4) div {
    background-color: green;
} */

:root {
    --card-space: 15vw;
    --card-margin: 1vw;
    --card-top-offset: 1rem;
    --outline-width: 0px;
}

#cards {
    --numcards: 4;
    view-timeline-name: --cards-element-scrolls-in-body;
    /* Make place at bottom, as items will slide to that position*/
    padding-bottom: calc(var(--numcards) * var(--card-top-offset));
    /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
    margin-bottom: var(--card-margin);
    list-style: none;
    outline: calc(var(--outline-width) * 10) solid hotpink;

    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(var(--numcards), var(--card-space));
    gap: var(--card-margin);
}

#card_1 {
    --index: 1;
}

#card_2 {
    --index: 2;
}

.card {
    position: sticky;
    top: 0;
    padding-top: calc(var(--index) * var(--card-top-offset));
    outline: var(--outline-width) solid lime;
    --index0: calc(var(--index) - 1); /* 0-based index */
    --reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
    --reverse-index0: calc(var(--reverse-index) - 1); /* 0-based reverse index */
}

.card__content {
    transform-origin: 50% 0%;
    will-change: transform;
    box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
    background: rgba(255, 255, 255, 0);
    color: rgb(10, 5, 7);
    border-radius: 1em;
    overflow: hidden;

    display: grid;
    grid-template-areas: "text img";
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto;

    align-items: stretch;
    outline: var(--outline-width) solid blue;
    --start-range: calc(var(--index0) / var(--numcards) * 100%);
    --end-range: calc((var(--index)) / var(--numcards) * 100%);

    animation: linear scale forwards;
    animation-timeline: --cards-element-scrolls-in-body;
    animation-range: exit-crossing var(--start-range) exit-crossing var(--end-range);
}

@keyframes scale {
    to {
        transform:
            scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
            background: rgb(255, 255, 255);
    }
}
    